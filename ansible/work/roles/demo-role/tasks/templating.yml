---

# Jinja2 templating Documentation:
# https://jinja.palletsprojects.com/en/stable/templates/#
- name: "Basic templating example"
  vars:
    myvar: "hello there"
  ansible.builtin.debug:
    msg: |
      This is a basic example of a jinja template.
      You can insert variables into it like this:
      {{ myvar }}

- name: "Lets do a teapmlate with an if statement"
  vars:
    mybool: false
  ansible.builtin.debug:
    msg: |
      {% if mybool == true -%}
        The value was true
      {% else -%}
        The value was false
      {% endif %}

- name: "Lets make a template with a loop and a builtin function"
  ansible.builtin.debug:
    msg: |
      Lets count to 10 :)

      {% for num in range(1, 10) %}
        {{- num}}
      {% endfor %}

- name: "Lets loop and ignore the first and last iterations when printing"
  vars:
    words: "This is a sentence we will split along words and ignore the first and last one"
  ansible.builtin.debug:
    msg: |
      {% for word in (words | ansible.builtin.split(' ') | list) %}
        {%- if not loop.first or not loop.last %}
          {{- word }}
        {%- endif %}
      {% endfor %}

- name: "Let loop through a range and display even or odd with the cycle helper function"
  ansible.builtin.debug:
    msg: |
      {% for number in range(0,11) %}
        {{- loop.cycle('even', 'odd') }}
        {#- Yes this can be done with the modulus operator, I'm only showing this to demonstrate the cycle functionality -#}
      {% endfor %}

- name: "Test cloud-init template"
  vars:
    ipv4_routes:
      - - 192.168.100.0/24
        - 192.168.100.1
  ansible.builtin.debug:
    msg: "{{ lookup('ansible.builtin.template', role_path ~ '/templates/cloud-init.j2.yml', template_vars={'IPV4_ROUTES': ipv4_routes}) }}"

- name: "Lets now call a real template and pass in some variables"
  when: app_template is defined and app_template | bool
  vars:
    app_profile:
      192.168.1.10:
        apps:
          - 'app1'
          - 'app2'
          - 'app3'
        dns:
          a_record_suffix: "vm1"
          cname_list:
            - "cn1-1"
            - "cn1-2"
            - "cn1-3"
        resource_profile: "small"
      192.168.1.11:
        apps:
          - 'app4'
          - 'app5'
          - 'app6'
        dns:
          a_record_suffix: "vm2"
          cname_list:
            - "cn2-1"
            - "cn2-2"
            - "cn2-3"
        resource_profile: "medium"
      192.168.1.12:
        apps:
          - 'app7'
          - 'app8'
          - 'app9'
        dns:
          a_record_suffix: "vm3"
          cname_list:
            - "cn3-1"
            - "cn3-2"
            - "cn3-3"
        resource_profile: "large"
  ansible.builtin.set_fact:
    temmplate_results: "{{ lookup('ansible.builtin.template', role_path ~ '/templates/demo.j2', template_vars = {'application_profile': app_profile}) }}"
